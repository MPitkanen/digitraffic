{
    "swagger": "2.0",
    "info": {
        "description": "Digitraffic is a service operated by the Finnish Transport Agency offering real time traffic information. Currently the service covers road, marine and rail traffic. The service has a public Google-group for communication between developers, service administrators and Finnish Transport Agency. The name of the group is road.digitraffic.fi. The discussion in the forum is mostly in Finnish, but you're welcome to communicate in English too.",
        "version": "1.0#1.9-72",
        "title": "Digitraffic Road metadata API",
        "contact": {
            "name": "Liikennevirasto / Finnish Transport Agency",
            "url": "https://groups.google.com/forum/#!forum/roaddigitrafficfi"
        },
        "license": {
            "name": "Digitraffic is an open data service. All content from the service and the service documentation is licenced under the Creative Commons 4.0 BY license.",
            "url": "https://creativecommons.org/licenses/by/4.0/"
        }
    },
    "host": "tie.digitraffic.fi",
    "basePath": "/",
    "tags": [
        {
            "name": "metadata",
            "description": "Metadata for Digitraffic services"
        },
        {
            "name": "data",
            "description": "Data of Digitraffic services"
        }
    ],
    "produces": [
        "application/json;charset=UTF-8"
    ],
    "paths": {
        "/api/v1/data/camera-data": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current data of cameras",
                "operationId": "cameraDataUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of camera station data",
                        "schema": {
                            "$ref": "#/definitions/CameraData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/camera-data/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current data of camera",
                "operationId": "cameraDataByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Camera id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of camera station data",
                        "schema": {
                            "$ref": "#/definitions/CameraData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/fluency-current": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current fluency data of links including journey times",
                "operationId": "fluencyCurrentUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of current fluency data",
                        "schema": {
                            "$ref": "#/definitions/TrafficFluencyData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/fluency-current/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current fluency data of link including journey times",
                "operationId": "fluencyCurrentByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Link id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of current fluency data",
                        "schema": {
                            "$ref": "#/definitions/TrafficFluencyData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/fluency-history-previous-day": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "History data of links for previous day",
                "operationId": "fluencyHistoryPreviousDayUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of history data",
                        "schema": {
                            "$ref": "#/definitions/HistoryData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/fluency-history-previous-day/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "History data of link for previous day",
                "operationId": "fluencyHistoryPreviousDayByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Link id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of history data",
                        "schema": {
                            "$ref": "#/definitions/HistoryData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/fluency-history/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "History data of link for given month",
                "operationId": "fluencyHistoryByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Link id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year (>2014)",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month (1-12)",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of history data",
                        "schema": {
                            "$ref": "#/definitions/HistoryData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/free-flow-speeds": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current free flow speeds",
                "operationId": "freeFlowSpeedsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of free flow speeds",
                        "schema": {
                            "$ref": "#/definitions/FreeFlowSpeedData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/free-flow-speeds/link/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current free flow speeds of link",
                "operationId": "freeFlowSpeedsOfLinkByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Link id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of free flow speeds",
                        "schema": {
                            "$ref": "#/definitions/FreeFlowSpeedData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/free-flow-speeds/tms/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current free flow speeds of TMS station (Traffic Measurement System / LAM)",
                "operationId": "freeFlowSpeedsOfTmsByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TMS station id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of free flow speeds",
                        "schema": {
                            "$ref": "#/definitions/FreeFlowSpeedData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/road-conditions": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current data of Weather Forecast Sections",
                "operationId": "roadConditionsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of Weather Forecast Section data",
                        "schema": {
                            "$ref": "#/definitions/ForecastSectionWeatherRootDto"
                        }
                    }
                }
            }
        },
        "/api/v1/data/tms-data": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current data of TMS Stations (Traffic Measurement System / LAM)",
                "operationId": "tmsDataUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of TMS Station data",
                        "schema": {
                            "$ref": "#/definitions/TmsData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/tms-data/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current data of TMS station (Traffic Measurement System / LAM)",
                "operationId": "tmsDataByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "TMS Station id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of weather station data",
                        "schema": {
                            "$ref": "#/definitions/TmsData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/traffic-disorders-datex2": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Active traffic disorders Datex2 messages",
                "operationId": "trafficDisordersDatex2UsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml",
                    "application/json;charset=UTF-8"
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of traffic disorders",
                        "schema": {
                            "$ref": "#/definitions/TrafficDisordersDatex2Response"
                        }
                    }
                }
            }
        },
        "/api/v1/data/traffic-disorders-datex2/history": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Traffic disorder Datex2 messages disorders history",
                "operationId": "trafficDisordersDatex2OfHistoryUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml",
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "situationId",
                        "in": "query",
                        "description": "Situation id",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "year",
                        "in": "query",
                        "description": "Year (>2014)",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "month",
                        "in": "query",
                        "description": "Month (1-12)",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of traffic disorders",
                        "schema": {
                            "$ref": "#/definitions/TrafficDisordersDatex2Response"
                        }
                    },
                    "400": {
                        "description": "Invalid parameter"
                    },
                    "404": {
                        "description": "Situation id not found"
                    }
                }
            }
        },
        "/api/v1/data/traffic-disorders-datex2/{situationId}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Traffic disorder Datex2 messages by situation id",
                "operationId": "trafficDisordersDatex2BySituationIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/xml",
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "situationId",
                        "in": "path",
                        "description": "Situation id.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of traffic disorders",
                        "schema": {
                            "$ref": "#/definitions/TrafficDisordersDatex2Response"
                        }
                    },
                    "404": {
                        "description": "Situation id not found"
                    }
                }
            }
        },
        "/api/v1/data/weather-data": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current data of Weather Stations",
                "operationId": "weatherDataUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of Weather Station data",
                        "schema": {
                            "$ref": "#/definitions/WeatherData"
                        }
                    }
                }
            }
        },
        "/api/v1/data/weather-data/{id}": {
            "get": {
                "tags": [
                    "data"
                ],
                "summary": "Current data of Weather Station",
                "operationId": "weatherDataByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Weather Station id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of weather station data",
                        "schema": {
                            "$ref": "#/definitions/WeatherData"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/camera-stations": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of weather camera presets",
                "operationId": "cameraStationsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of Camera Preset Feature Collections",
                        "schema": {
                            "$ref": "#/definitions/CameraStationFeatureCollection"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/forecast-sections": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of weather forecast sections",
                "operationId": "forecastSectionsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of Forecast Sections",
                        "schema": {
                            "$ref": "#/definitions/ForecastSectionsMetadata"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/location-types": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of location types and locationsubtypes",
                "operationId": "locationTypesUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "version",
                        "in": "query",
                        "description": "If parameter is given use this version.",
                        "required": false,
                        "type": "string",
                        "default": "latest"
                    },
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of location types and location subtypes",
                        "schema": {
                            "$ref": "#/definitions/LocationTypesMetadata"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/location-versions": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "List available location versions",
                "operationId": "locationVersionsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of location versions",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocationVersion"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/locations": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of locations",
                "operationId": "locationsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "version",
                        "in": "query",
                        "description": "If parameter is given use this version.",
                        "required": false,
                        "type": "string",
                        "default": "latest"
                    },
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of locations",
                        "schema": {
                            "$ref": "#/definitions/LocationFeatureCollection"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/locations/{id}": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of one location",
                "operationId": "locationsByIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "version",
                        "in": "query",
                        "description": "If parameter is given use this version.",
                        "required": false,
                        "type": "string",
                        "default": "latest"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of location",
                        "schema": {
                            "$ref": "#/definitions/LocationFeatureCollection"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/tms-sensors": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of available sensors of TMS stations (Traffic Measurement System / LAM)",
                "operationId": "tmsSensorsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of TMS Station Sensors",
                        "schema": {
                            "$ref": "#/definitions/RoadStationsSensorsMetadata"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/tms-stations": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of TMS stations (Traffic Measurement System / LAM)",
                "operationId": "tmsStationsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return TMS stations of given state.",
                        "required": false,
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "removed",
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of TMS Station Feature Collections",
                        "schema": {
                            "$ref": "#/definitions/TmsStationFeatureCollection"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/tms-stations/road-number/{number}": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of TMS stations of given road (Traffic Measurement System / LAM)",
                "operationId": "tmsStationsByRoadNumberUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "number",
                        "in": "path",
                        "description": "number",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Return TMS stations of given state.",
                        "required": false,
                        "type": "string",
                        "default": "active",
                        "enum": [
                            "active",
                            "removed",
                            "all"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of TMS Station Feature Collections",
                        "schema": {
                            "$ref": "#/definitions/TmsStationFeatureCollection"
                        }
                    },
                    "404": {
                        "description": "Vessel metadata not found"
                    }
                }
            }
        },
        "/api/v1/metadata/tms-stations/road-station-id/{id}": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of one TMS station (Traffic Measurement System / LAM)",
                "operationId": "tmsStationsByRoadStationIdUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of TMS Station Feature Collections",
                        "schema": {
                            "$ref": "#/definitions/TmsStationFeature"
                        }
                    },
                    "404": {
                        "description": "Vessel metadata not found"
                    }
                }
            }
        },
        "/api/v1/metadata/tms-stations/tms-number/{number}": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of one TMS station (Traffic Measurement System / LAM)",
                "operationId": "tmsStationsByTmsNumberUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "number",
                        "in": "path",
                        "description": "number",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of TMS Station Feature Collections",
                        "schema": {
                            "$ref": "#/definitions/TmsStationFeature"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/travel-time-links": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of metropolitan area travel time links",
                "operationId": "travelTimeLinksUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of travel time links",
                        "schema": {
                            "$ref": "#/definitions/LinkFeatureCollection"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/weather-sensors": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of available sensors of weather stations",
                "operationId": "weatherSensorsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of Weather Station Sensors",
                        "schema": {
                            "$ref": "#/definitions/RoadStationsSensorsMetadata"
                        }
                    }
                }
            }
        },
        "/api/v1/metadata/weather-stations": {
            "get": {
                "tags": [
                    "metadata"
                ],
                "summary": "The static information of weather stations",
                "operationId": "weatherStationsUsingGET",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json;charset=UTF-8"
                ],
                "parameters": [
                    {
                        "name": "lastUpdated",
                        "in": "query",
                        "description": "If parameter is given result will only contain update status.",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of Weather Feature Collections",
                        "schema": {
                            "$ref": "#/definitions/FeatureCollection"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CameraData": {
            "type": "object",
            "required": [
                "dataUpdatedTime"
            ],
            "properties": {
                "cameraStations": {
                    "type": "array",
                    "description": "Camera stations data",
                    "items": {
                        "$ref": "#/definitions/CameraStationData"
                    }
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                }
            },
            "description": "Latest measurement data from weather stations"
        },
        "CameraPreset": {
            "type": "object",
            "required": [
                "directionCode"
            ],
            "properties": {
                "direction": {
                    "type": "string",
                    "description": "Direction of camera",
                    "enum": [
                        "UNKNOWN",
                        "INCREASING_DIRECTION",
                        "DECREASING_DIRECTION",
                        "CROSSING_ROAD_INCREASING_DIRECTION",
                        "CROSSING_ROAD_DECREASING_DIRECTION",
                        "SPECIAL_DIRECTION"
                    ]
                },
                "imageUrl": {
                    "type": "string",
                    "description": "Image url"
                },
                "inCollection": {
                    "type": "boolean",
                    "example": false,
                    "description": "Is data in collection"
                },
                "presentationName": {
                    "type": "string",
                    "description": "PresentationName (Preset name 1, direction)"
                },
                "resolution": {
                    "type": "string",
                    "description": "Resolution of camera [px x px]"
                },
                "directionCode": {
                    "type": "string",
                    "description": "Preset direction (0 = Unknown direction. 1 = According to the road register address increasing direction. I.e. on the road 4 to Lahti, if we are in Korso. 2 = According to the road register address decreasing direction. I.e. on the road 4 to Helsinki, if we are in Korso. 3 = Increasing direction of the crossing road. 4 = Decreasing direction of the crossing road5-99 = Special directions)"
                },
                "presetId": {
                    "type": "string",
                    "description": "Camera preset id"
                },
                "cameraId": {
                    "type": "string",
                    "description": "Camera id"
                }
            },
            "description": "Camera preset"
        },
        "CameraPresetData": {
            "type": "object",
            "properties": {
                "imageUrl": {
                    "type": "string",
                    "description": "Image url"
                },
                "measuredTime": {
                    "type": "string",
                    "description": "Value measured timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "presentationName": {
                    "type": "string",
                    "description": "PresentationName (Preset name 1, direction)"
                },
                "id": {
                    "type": "string",
                    "description": "Camera preset id"
                }
            },
            "description": "Camera's preset data"
        },
        "CameraProperties": {
            "type": "object",
            "required": [
                "coordinatesETRS89",
                "roadStationId"
            ],
            "properties": {
                "annualMaintenanceTime": {
                    "type": "string",
                    "description": "Annual maintenance timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "cameraType": {
                    "type": "string",
                    "description": "Type of camera",
                    "enum": [
                        "VAPIX",
                        "VMX_MPC",
                        "VMX_MPH",
                        "D_LINK",
                        "ZAVIO",
                        "ENEO",
                        "BOSCH",
                        "SONY"
                    ]
                },
                "collectionInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Data collection interval [s]"
                },
                "collectionStatus": {
                    "type": "string",
                    "description": "Data collection status",
                    "enum": [
                        "GATHERING",
                        "REMOVED_TEMPORARILY",
                        "REMOVED_PERMANENTLY"
                    ]
                },
                "coordinatesETRS89": {
                    "type": "array",
                    "description": "Road station coordinates (LONGITUDE, LATITUDE, ALTITUDE. Coordinates are in ETRS89 / ETRS-TM35FIN format. Altitude is optional and measured in metres.)Point's coordinates  (Coordinates in WGS84. Altitude is optional [m])",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "country": {
                    "type": "string",
                    "description": "Country where station is located"
                },
                "liviId": {
                    "type": "string",
                    "description": "Id in road registry"
                },
                "municipality": {
                    "type": "string",
                    "description": "Municipality"
                },
                "municipalityCode": {
                    "type": "string",
                    "description": "Municipality code"
                },
                "name": {
                    "type": "string",
                    "description": "Common name of road station"
                },
                "names": {
                    "type": "object",
                    "description": "Map of namess [fi, sv, en]",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "nearestWeatherStationId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Id of nearest Weather Station"
                },
                "presets": {
                    "type": "array",
                    "description": "Camera presets",
                    "items": {
                        "$ref": "#/definitions/CameraPreset"
                    }
                },
                "province": {
                    "type": "string",
                    "description": "Province"
                },
                "provinceCode": {
                    "type": "string",
                    "description": "Province code"
                },
                "repairMaintenanceTime": {
                    "type": "string",
                    "description": "Repair maintenance timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "roadAddress": {
                    "$ref": "#/definitions/RoadAddress"
                },
                "roadStationId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Road station's id (naturalId)"
                },
                "startTime": {
                    "type": "string",
                    "description": "Station established timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "state": {
                    "type": "string",
                    "description": "Road station state",
                    "enum": [
                        "OK",
                        "OK_FAULT_DOUBT_CANCELLED",
                        "FAULT_DOUBT",
                        "FAULT_CONFIRMED",
                        "FAULT_CONFIRMED_NOT_FIXED_IN_NEAR_FUTURE",
                        "REPAIR_REQUEST_POSTED",
                        "REPAIR_MAINTENANCE_DONE",
                        "REPAIR_INTERRUPTED"
                    ]
                },
                "id": {
                    "type": "string",
                    "description": "Camera id"
                }
            },
            "description": "Camera preset properties"
        },
        "CameraStationData": {
            "type": "object",
            "properties": {
                "cameraPresets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CameraPresetData"
                    }
                },
                "id": {
                    "type": "string"
                },
                "nearestWeatherStationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "roadStationId": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "description": "Road wather station with sensor values"
        },
        "CameraStationFeature": {
            "type": "object",
            "required": [
                "geometry",
                "id",
                "properties",
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "\"Feature\": GeoJSON Feature Object"
                },
                "id": {
                    "type": "string",
                    "description": "Road station id, same as CameraStationProperties.roadStationId"
                },
                "geometry": {
                    "description": "GeoJSON Point Geometry Object. Point where station is located",
                    "$ref": "#/definitions/Geometry"
                },
                "properties": {
                    "description": "Camera preset properties.",
                    "$ref": "#/definitions/CameraProperties"
                }
            },
            "description": "GeoJSON Feature Object."
        },
        "CameraStationFeatureCollection": {
            "type": "object",
            "required": [
                "dataLastCheckedTime",
                "dataUpdatedTime",
                "features",
                "type"
            ],
            "properties": {
                "dataLastCheckedTime": {
                    "type": "string",
                    "description": "Data last checked timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "type": {
                    "type": "string",
                    "description": "\"FeatureCollection\": GeoJSON FeatureCollection Object"
                },
                "features": {
                    "type": "array",
                    "description": "Features",
                    "items": {
                        "$ref": "#/definitions/CameraStationFeature"
                    }
                }
            },
            "description": "GeoJSON Feature Collection of Cameras with presets"
        },
        "CatalogueReference": {
            "type": "object",
            "properties": {
                "catalogueReferenceExtension": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "keyCatalogueReference": {
                    "type": "string"
                }
            }
        },
        "D2LogicalModel": {
            "type": "object",
            "properties": {
                "d2LogicalModelExtension": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "exchange": {
                    "$ref": "#/definitions/Exchange"
                },
                "extensionName": {
                    "type": "string"
                },
                "extensionVersion": {
                    "type": "string"
                },
                "modelBaseVersion": {
                    "type": "string"
                },
                "payloadPublication": {
                    "$ref": "#/definitions/PayloadPublication"
                }
            }
        },
        "Direction": {
            "type": "object",
            "properties": {
                "nameEn": {
                    "type": "string",
                    "description": "Direction name in English"
                },
                "nameFi": {
                    "type": "string",
                    "description": "Direction name in Finnish"
                },
                "nameSv": {
                    "type": "string",
                    "description": "Direction name in Swedish"
                },
                "naturalId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Direction id"
                },
                "rdi": {
                    "type": "string",
                    "description": "The value is P if the direction of travel is from west to east along the ring roads (Kehä Ⅰ and Kehä Ⅲ) or away from Helsinki along roads running  radially (such as Vt1 and Vt4), and the value is N for the opposite direction"
                }
            }
        },
        "Exchange": {
            "type": "object",
            "properties": {
                "catalogueReference": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CatalogueReference"
                    }
                },
                "changedFlag": {
                    "type": "string",
                    "enum": [
                        "CATALOGUE",
                        "FILTER"
                    ]
                },
                "clientIdentification": {
                    "type": "string"
                },
                "deliveryBreak": {
                    "type": "boolean"
                },
                "denyReason": {
                    "type": "string",
                    "enum": [
                        "UNKNOWN_REASON",
                        "WRONG_CATALOGUE",
                        "WRONG_FILTER",
                        "WRONG_ORDER",
                        "WRONG_PARTNER"
                    ]
                },
                "exchangeExtension": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "filterReference": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/FilterReference"
                    }
                },
                "historicalStartDate": {
                    "$ref": "#/definitions/XMLGregorianCalendar"
                },
                "historicalStopDate": {
                    "$ref": "#/definitions/XMLGregorianCalendar"
                },
                "keepAlive": {
                    "type": "boolean"
                },
                "requestType": {
                    "type": "string",
                    "enum": [
                        "CATALOGUE",
                        "FILTER",
                        "REQUEST_DATA",
                        "REQUEST_HISTORICAL_DATA",
                        "SUBSCRIPTION"
                    ]
                },
                "response": {
                    "type": "string",
                    "enum": [
                        "ACKNOWLEDGE",
                        "CATALOGUE_REQUEST_DENIED",
                        "FILTER_REQUEST_DENIED",
                        "REQUEST_DENIED",
                        "SUBSCRIPTION_REQUEST_DENIED"
                    ]
                },
                "subscription": {
                    "$ref": "#/definitions/Subscription"
                },
                "subscriptionReference": {
                    "type": "string"
                },
                "supplierIdentification": {
                    "$ref": "#/definitions/InternationalIdentifier"
                },
                "target": {
                    "$ref": "#/definitions/Target"
                }
            }
        },
        "ExtensionType": {
            "type": "object",
            "properties": {
                "any": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "Feature": {
            "type": "object",
            "required": [
                "geometry",
                "id",
                "properties",
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "\"Feature\": GeoJSON Feature Object"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Road station id, same as WeatherStationProperties.roadStationId"
                },
                "geometry": {
                    "description": "GeoJSON Point Geometry Object. Point where station is located",
                    "$ref": "#/definitions/Geometry"
                },
                "properties": {
                    "description": "Weather station properties",
                    "$ref": "#/definitions/WeatherStationProperties"
                }
            },
            "description": "GeoJSON Feature Object of Weather Station"
        },
        "FeatureCollection": {
            "type": "object",
            "required": [
                "dataLastCheckedTime",
                "dataUpdatedTime",
                "features",
                "type"
            ],
            "properties": {
                "dataLastCheckedTime": {
                    "type": "string",
                    "description": "Data last checked timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "type": {
                    "type": "string",
                    "description": "\"FeatureCollection\": GeoJSON FeatureCollection Object"
                },
                "features": {
                    "type": "array",
                    "description": "Features",
                    "items": {
                        "$ref": "#/definitions/Feature"
                    }
                }
            },
            "description": "GeoJSON Feature Collection of Weather Stations"
        },
        "FilterReference": {
            "type": "object",
            "properties": {
                "deleteFilter": {
                    "type": "boolean"
                },
                "filterOperationApproved": {
                    "type": "boolean"
                },
                "filterReferenceExtension": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "keyFilterReference": {
                    "type": "string"
                }
            }
        },
        "FluencyClass": {
            "type": "object",
            "required": [
                "code",
                "nameEn"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32",
                    "description": "1 = stationary traffic,\n2 = queuing traffic,\n3 = slow traffic,\n4 = heavy traffic,\n5 = traffic flowing freely"
                },
                "nameEn": {
                    "type": "string",
                    "description": "Name for fluency class"
                }
            },
            "description": "FluencyClass"
        },
        "ForecastConditionReasonDto": {
            "type": "object",
            "properties": {
                "freezingRainCondition": {
                    "type": "boolean",
                    "example": false,
                    "description": "Tells if there is freezing rain: true/false"
                },
                "frictionCondition": {
                    "type": "string",
                    "enum": [
                        "SLIPPERY",
                        "VERY_SLIPPERY"
                    ]
                },
                "precipitationCondition": {
                    "type": "string",
                    "enum": [
                        "NO_RAIN_DRY_WEATHER",
                        "LIGHT_RAIN",
                        "RAIN",
                        "HEAVY_RAIN",
                        "LIGHT_SNOWFALL",
                        "SNOWFALL",
                        "HEAVY_SNOWFALL"
                    ]
                },
                "roadCondition": {
                    "type": "string",
                    "enum": [
                        "DRY",
                        "MOIST",
                        "WET",
                        "SLUSH",
                        "FROST",
                        "PARTLY_ICY",
                        "ICE",
                        "SNOW"
                    ]
                },
                "visibilityCondition": {
                    "type": "string",
                    "enum": [
                        "FAIRLY_POOR",
                        "POOR"
                    ]
                },
                "windCondition": {
                    "type": "string",
                    "enum": [
                        "WEAK",
                        "MEDIUM",
                        "STRONG"
                    ]
                },
                "winterSlipperiness": {
                    "type": "boolean",
                    "example": false,
                    "description": "Tells if it is slippery: true/false"
                }
            }
        },
        "ForecastSectionFeature": {
            "type": "object",
            "required": [
                "geometry",
                "id",
                "properties",
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "\"Feature\": GeoJSON Feature Object"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Forecast section id"
                },
                "geometry": {
                    "description": "GeoJSON LineString Geometry Object. Points represent the road.",
                    "$ref": "#/definitions/Geometry"
                },
                "properties": {
                    "description": "Forecast section properties",
                    "$ref": "#/definitions/ForecastSectionProperties"
                }
            },
            "description": "GeoJSON Feature Object"
        },
        "ForecastSectionFeatureCollection": {
            "type": "object",
            "required": [
                "dataLastCheckedTime",
                "dataUpdatedTime",
                "features",
                "type"
            ],
            "properties": {
                "dataLastCheckedTime": {
                    "type": "string",
                    "description": "Data last checked timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "type": {
                    "type": "string",
                    "description": "\"FeatureCollection\": GeoJSON FeatureCollection Object"
                },
                "features": {
                    "type": "array",
                    "description": "Features",
                    "items": {
                        "$ref": "#/definitions/ForecastSectionFeature"
                    }
                }
            },
            "description": "GeoJSON Feature Collection of road conditions"
        },
        "ForecastSectionProperties": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Forecast section description"
                },
                "endDistance": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Forecast section end distance"
                },
                "endRoadSection": {
                    "description": "Road section where forecast section ends",
                    "$ref": "#/definitions/RoadSection"
                },
                "id": {
                    "type": "string",
                    "description": "Forecast section identifier 15 characters ie. 00004_112_000_0: \n1. Road number 5 characters ie. 00004, \n2. Road section 3 characters ie. 112, \n3. Road section version 3 characters ie. 000, \n4. Reserved for future needs 1 characters default 0"
                },
                "length": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Forecast section length"
                },
                "road": {
                    "description": "Road where forecast section is located",
                    "$ref": "#/definitions/Road"
                },
                "roadNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Forecast section road number"
                },
                "roadSectionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Road section number"
                },
                "roadSectionVersionNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Road section version number"
                },
                "startDistance": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Forecast section start distance"
                },
                "startRoadSection": {
                    "description": "Road section where forecast section starts",
                    "$ref": "#/definitions/RoadSection"
                }
            }
        },
        "ForecastSectionWeatherDataDto": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Forecast section identifier 15 characters ie. 00004_112_000_0: \n1. Road number 5 characters ie. 00004, \n2. Road section 3 characters ie. 112, \n3. Road section version 3 characters ie. 000, \n4. Reserved for future needs 1 characters default 0"
                },
                "roadConditions": {
                    "type": "array",
                    "description": "Road conditions data forecast section",
                    "items": {
                        "$ref": "#/definitions/RoadConditionDto"
                    }
                }
            }
        },
        "ForecastSectionWeatherRootDto": {
            "type": "object",
            "required": [
                "dataUpdatedTime"
            ],
            "properties": {
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "weatherData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ForecastSectionWeatherDataDto"
                    }
                }
            }
        },
        "ForecastSectionsMetadata": {
            "type": "object",
            "required": [
                "dataLastCheckedTime",
                "dataUpdatedTime",
                "forecastSections"
            ],
            "properties": {
                "dataLastCheckedTime": {
                    "type": "string",
                    "description": "Data last checked timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "forecastSections": {
                    "description": "Weather forecast sections",
                    "$ref": "#/definitions/ForecastSectionFeatureCollection"
                }
            },
            "description": "Weather forecast sections"
        },
        "FreeFlowSpeedData": {
            "type": "object",
            "required": [
                "dataUpdatedTime"
            ],
            "properties": {
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "linkFreeFlowSpeeds": {
                    "type": "array",
                    "description": "Free flow speeds for links",
                    "items": {
                        "$ref": "#/definitions/LinkFreeFlowSpeedData"
                    }
                },
                "tmsFreeFlowSpeeds": {
                    "type": "array",
                    "description": "Free flow speeds for TMS stations",
                    "items": {
                        "$ref": "#/definitions/TmsFreeFlowSpeedData"
                    }
                }
            },
            "description": "Current free flow speed values for links and TMS stations"
        },
        "Geometry": {
            "type": "object",
            "required": [
                "coordinates",
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "\"Point\": GeoJson Point Geometry Object"
                },
                "coordinates": {
                    "type": "array",
                    "example": "[6669701, 364191, 0]",
                    "description": "Point's coordinates [LONGITUDE, LATITUDE, ALTITUDE] (Coordinates in WGS84 format in decimal degrees. Altitude is optional and measured in meters. Location accuracy is 1-100 metres.)",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "description": "GeoJson Point Geometry Object"
        },
        "HistoryData": {
            "type": "object",
            "required": [
                "dataUpdatedTime"
            ],
            "properties": {
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "links": {
                    "type": "array",
                    "description": "Links",
                    "items": {
                        "$ref": "#/definitions/Link"
                    }
                }
            },
            "description": "Average median data calculated for the previous day"
        },
        "InternationalIdentifier": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string",
                    "enum": [
                        "AT",
                        "BE",
                        "BG",
                        "CH",
                        "CS",
                        "CY",
                        "CZ",
                        "DE",
                        "DK",
                        "EE",
                        "ES",
                        "FI",
                        "FO",
                        "FR",
                        "GB",
                        "GG",
                        "GI",
                        "GR",
                        "HR",
                        "HU",
                        "IE",
                        "IM",
                        "IS",
                        "IT",
                        "JE",
                        "LI",
                        "LT",
                        "LU",
                        "LV",
                        "MA",
                        "MC",
                        "MK",
                        "MT",
                        "NL",
                        "NO",
                        "PL",
                        "PT",
                        "RO",
                        "SE",
                        "SI",
                        "SK",
                        "SM",
                        "TR",
                        "VA",
                        "OTHER"
                    ]
                },
                "internationalIdentifierExtension": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "nationalIdentifier": {
                    "type": "string"
                }
            }
        },
        "LatestMedianData": {
            "type": "object",
            "required": [
                "id",
                "medianJourneyTime",
                "medianSpeed"
            ],
            "properties": {
                "fluencyClass": {
                    "$ref": "#/definitions/FluencyClass"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Link identifier (naturalId)"
                },
                "measuredTime": {
                    "type": "string",
                    "description": "Value measured timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "medianJourneyTime": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Median of journey times for this link, based on 5 minutes [s]"
                },
                "medianSpeed": {
                    "type": "number",
                    "description": "Median speed, calculated based on the median journey time [km/h]"
                },
                "nobs": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of observations that were used to calculate the median journey time"
                }
            },
            "description": "The message contains the latest 5 minute median, corresponding average speed, fluency class, and timestamp of the latest update for each link."
        },
        "Link": {
            "type": "object",
            "required": [
                "id",
                "linkMeasurements"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Link id"
                },
                "linkMeasurements": {
                    "type": "array",
                    "description": "Link measurement data",
                    "items": {
                        "$ref": "#/definitions/LinkMeasurementData"
                    }
                },
                "measuredTime": {
                    "type": "string",
                    "description": "Value measured timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                }
            },
            "description": "Link data"
        },
        "LinkFeature": {
            "type": "object",
            "required": [
                "geometry",
                "id",
                "properties",
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "\"Feature\": GeoJSON Feature Object"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Link id"
                },
                "geometry": {
                    "description": "GeoJSON LineString Geometry Object. Points represent the link.",
                    "$ref": "#/definitions/Geometry"
                },
                "properties": {
                    "description": "Link properties",
                    "$ref": "#/definitions/LinkProperties"
                }
            },
            "description": "GeoJSON Feature Object"
        },
        "LinkFeatureCollection": {
            "type": "object",
            "required": [
                "dataLastCheckedTime",
                "dataUpdatedTime",
                "features",
                "type"
            ],
            "properties": {
                "dataLastCheckedTime": {
                    "type": "string",
                    "description": "Data last checked timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "type": {
                    "type": "string",
                    "description": "\"FeatureCollection\": GeoJSON FeatureCollection Object"
                },
                "features": {
                    "type": "array",
                    "description": "Features",
                    "items": {
                        "$ref": "#/definitions/LinkFeature"
                    }
                }
            },
            "description": "GeoJSON Feature Collection of travel time links"
        },
        "LinkFreeFlowSpeedData": {
            "type": "object",
            "required": [
                "freeFlowSpeed",
                "id"
            ],
            "properties": {
                "freeFlowSpeed": {
                    "type": "number",
                    "format": "double",
                    "description": "Free flow speed [km/h]"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Link id"
                }
            }
        },
        "LinkMeasurementData": {
            "type": "object",
            "required": [
                "averageSpeed",
                "fluencyClass",
                "medianTravelTime",
                "minute"
            ],
            "properties": {
                "averageSpeed": {
                    "type": "number",
                    "format": "double",
                    "description": "Average speed, km/h"
                },
                "fluencyClass": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Fluency class"
                },
                "measuredTime": {
                    "type": "string",
                    "description": "Value measured timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "medianTravelTime": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Median travel time, in seconds"
                },
                "minute": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Index of the minute. 0 = 00:00, 60 = 01:00, 1439 = 23:59"
                }
            }
        },
        "LinkProperties": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Link id"
                },
                "length": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Length of the link in meters (m)"
                },
                "linkDirection": {
                    "description": "Direction of the link",
                    "$ref": "#/definitions/Direction"
                },
                "nameEn": {
                    "type": "string",
                    "description": "Link name in English"
                },
                "nameFi": {
                    "type": "string",
                    "description": "Link name in Finnish"
                },
                "nameSv": {
                    "type": "string",
                    "description": "Link name in Swedish"
                },
                "roadDistrict": {
                    "description": "Road district where the link is located",
                    "$ref": "#/definitions/RoadDistrict"
                },
                "sites": {
                    "type": "array",
                    "description": "List of sites (i.e. camera locations) along the link in order. First site is the starting point of a link.",
                    "items": {
                        "$ref": "#/definitions/Site"
                    }
                },
                "summerFreeFlowSpeed": {
                    "type": "number",
                    "description": "Typical speed at which vehicles travel along the link when there is no congestion"
                },
                "winterFreeFlowSpeed": {
                    "type": "number",
                    "description": "Typical speed at which vehicles travel along the link when there is no congestion"
                }
            }
        },
        "LocationFeature": {
            "type": "object",
            "required": [
                "geometry",
                "id",
                "properties"
            ],
            "properties": {
                "geometry": {
                    "description": "GeoJSON Point Geometry Object. Point where station is located",
                    "$ref": "#/definitions/Geometry"
                },
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Unique locationCode for this location"
                },
                "properties": {
                    "description": "Location properties.",
                    "$ref": "#/definitions/LocationProperties"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "LocationFeatureCollection": {
            "type": "object",
            "properties": {
                "features": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocationFeature"
                    }
                },
                "locationsUpdateTime": {
                    "type": "string"
                },
                "locationsVersion": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "LocationProperties": {
            "type": "object",
            "required": [
                "firstName",
                "subtypeCode"
            ],
            "properties": {
                "areaRef": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Code of the upper order administrative area"
                },
                "coordinatesETRS89": {
                    "type": "array",
                    "description": "Point coordinates (LONGITUDE, LATITUDE). Coordinates are in ETRS89 / ETRS-TM35FIN format.",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "firstName": {
                    "type": "string",
                    "description": "For roads and segments this is the name of the starting point. For all other objects (linear (streets), area and point) this is the name of the object"
                },
                "geocode": {
                    "type": "string",
                    "description": "Point location according to Finnish Transport Agency’s official addressing where Locations on road network are addressed as: Road number;Road part number;Carriageway; Distance from the beginning of the road part"
                },
                "linearRef": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For segments and point locations. Describes the code of the segment which these objects belong to. If there are no segments on the road the location code of the road is given instead"
                },
                "negDirection": {
                    "type": "string",
                    "description": "For all L5.0 and for some roads. Text to be used when the incident has an effect only on vehicles driving in the negative direction of the road. ( e.g. Ring 1 westbound)"
                },
                "negOffset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For segments and point locations. Segments: describes the code of previous segment on that road. For the first segment on the road this code is 0. Points: describes the code of previous point on that road. For the starting point this code is 0"
                },
                "orderOfPoint": {
                    "type": "string",
                    "description": "The order of point within line or segment feature"
                },
                "posDirection": {
                    "type": "string",
                    "description": "For all L5.0 and for some roads. Text to be used when the incident has an effect only on vehicles driving in the positive direction of the road. ( e.g. Ring 1 eastbound)"
                },
                "posOffset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "For segments and point locations. Segments: describes the code of next segment on that road. For the last segment on the road this code is 0. Points: describes the code of next point on that road. For the last point this code is 0"
                },
                "roadJunction": {
                    "type": "string",
                    "description": "Roadnumber for roads. Junctionno: the numbering of exits has only just begun on the very limited Finnish motorway network. The exit numbers will be included. NOTE: the roads, segments and points are not sorted in ascending order"
                },
                "roadName": {
                    "type": "string",
                    "description": "Roadname if exists, L5.0 always have road name"
                },
                "secondName": {
                    "type": "string",
                    "description": "For roads and segments this is the name of the ending point. For point locations the number of the intersecting road"
                },
                "subtypeCode": {
                    "type": "string",
                    "description": "Code of location subtype"
                },
                "urban": {
                    "type": "boolean",
                    "example": false,
                    "description": "Indicates whether a point is within the city limits (1) or not (0). NOTE: Not actively entered yet"
                }
            }
        },
        "LocationSubtypeJson": {
            "type": "object",
            "properties": {
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionFi": {
                    "type": "string"
                },
                "subtypeCode": {
                    "type": "string"
                }
            }
        },
        "LocationTypeJson": {
            "type": "object",
            "properties": {
                "descriptionEn": {
                    "type": "string"
                },
                "descriptionFi": {
                    "type": "string"
                },
                "typeCode": {
                    "type": "string"
                }
            }
        },
        "LocationTypesMetadata": {
            "type": "object",
            "properties": {
                "locationSubtypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocationSubtypeJson"
                    }
                },
                "locationTypes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LocationTypeJson"
                    }
                },
                "typesUpdated": {
                    "type": "string"
                },
                "typesVersion": {
                    "type": "string"
                }
            },
            "description": "Location types and location subtypes"
        },
        "LocationVersion": {
            "type": "object",
            "required": [
                "updated"
            ],
            "properties": {
                "updated": {
                    "type": "string",
                    "description": "Version last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "version": {
                    "type": "string",
                    "description": "Location version string"
                }
            },
            "description": "Location Version Object"
        },
        "MultilingualString": {
            "type": "object",
            "properties": {
                "values": {
                    "$ref": "#/definitions/Values"
                }
            }
        },
        "MultilingualStringValue": {
            "type": "object",
            "properties": {
                "lang": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "ObservationTimeType": {
            "type": "object",
            "properties": {
                "localtime": {
                    "$ref": "#/definitions/XMLGregorianCalendar"
                },
                "utc": {
                    "$ref": "#/definitions/XMLGregorianCalendar"
                }
            }
        },
        "PayloadPublication": {
            "type": "object",
            "properties": {
                "feedDescription": {
                    "$ref": "#/definitions/MultilingualString"
                },
                "feedType": {
                    "type": "string"
                },
                "lang": {
                    "type": "string"
                },
                "payloadPublicationExtension": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "publicationCreator": {
                    "$ref": "#/definitions/InternationalIdentifier"
                },
                "publicationTime": {
                    "$ref": "#/definitions/XMLGregorianCalendar"
                }
            }
        },
        "QName": {
            "type": "object",
            "properties": {
                "localPart": {
                    "type": "string"
                },
                "namespaceURI": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                }
            }
        },
        "Road": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Road number"
                },
                "name": {
                    "type": "string",
                    "description": "Road name"
                }
            }
        },
        "RoadAddress": {
            "type": "object",
            "properties": {
                "carriageway": {
                    "type": "string",
                    "enum": [
                        "ONE_CARRIAGEWAY",
                        "DUAL_CARRIAGEWAY_FIRST_MEASURING_DIRECTION",
                        "DUAL_CARRIAGEWAY_SECOND_UPSTREAM"
                    ]
                },
                "carriagewayCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Carriageway (0 = One carriageway portion, 1 = First carriageway of dual carriageway portion (measuring direction) 2 = Second carriageway of dual carriageway portion (upstream))"
                },
                "contractArea": {
                    "type": "string",
                    "description": "Road contract area"
                },
                "contractAreaCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Road contract area code"
                },
                "distanceFromRoadSectionStart": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Distance from start of the road portion [m]"
                },
                "roadMaintenanceClass": {
                    "type": "string",
                    "description": "Road maintenance class"
                },
                "roadNumber": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Road number (values 1–99999)"
                },
                "roadSection": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Road section (values 1–999)"
                }
            },
            "description": "Camera road address"
        },
        "RoadConditionDto": {
            "type": "object",
            "properties": {
                "daylight": {
                    "type": "boolean",
                    "example": false,
                    "description": "Tells if there is daylight: true/false"
                },
                "forecastConditionReason": {
                    "$ref": "#/definitions/ForecastConditionReasonDto"
                },
                "forecastName": {
                    "type": "string"
                },
                "overallRoadCondition": {
                    "type": "string",
                    "enum": [
                        "NORMAL_CONDITION",
                        "POOR_CONDITION",
                        "EXTREMELY_POOR_CONDITION",
                        "CONDITION_COULD_NOT_BE_RESOLVED"
                    ]
                },
                "reliability": {
                    "type": "string",
                    "enum": [
                        "SUCCESSFUL",
                        "NO_DATA_FROM_ROADSTATION",
                        "FAILED"
                    ]
                },
                "roadTemperature": {
                    "type": "string",
                    "description": "Road temperature at given time. If not available value is not set"
                },
                "temperature": {
                    "type": "string",
                    "description": "Air temperature"
                },
                "time": {
                    "type": "string",
                    "description": "Observation or forecast time depending on type"
                },
                "type": {
                    "type": "string",
                    "description": "Tells if object is an observation or a forecast: OBSERVATION / FORECAST"
                },
                "weatherSymbol": {
                    "type": "string",
                    "description": "Weather symbol code http://corporate.foreca.com/en/products/foreca-symbols"
                },
                "windDirection": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Wind direction in degrees. 0 when there is no wind or the direction is variable. 90 degrees is arrow to the east (count clockwise)"
                },
                "windSpeed": {
                    "type": "number",
                    "format": "double",
                    "description": "Wind speed in m/s"
                }
            }
        },
        "RoadDistrict": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Road district id (ELY)"
                },
                "name": {
                    "type": "string",
                    "description": "Road district name"
                },
                "speedLimitSeason": {
                    "type": "string",
                    "description": "Road district speed limit season",
                    "enum": [
                        "SUMMER",
                        "WINTER"
                    ]
                }
            }
        },
        "RoadSection": {
            "type": "object",
            "properties": {
                "endDistance": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Distance from the beginning to the end of the road section. (Length of the road section)"
                },
                "id": {
                    "type": "string",
                    "description": "Road section number"
                },
                "road": {
                    "description": "Road where this section is located",
                    "$ref": "#/definitions/Road"
                },
                "roadDistrict": {
                    "description": "District where road is located (or most of it)",
                    "$ref": "#/definitions/RoadDistrict"
                }
            }
        },
        "RoadStationSensor": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Sensor accuracy"
                },
                "description": {
                    "type": "string",
                    "description": "Sensor description [fi]"
                },
                "name": {
                    "type": "string",
                    "description": "Sensor name [fi]"
                },
                "sensorValueDescriptions": {
                    "type": "array",
                    "description": "Possible additional descriptions for sensor values",
                    "items": {
                        "$ref": "#/definitions/SensorValueDescription"
                    }
                },
                "shortName": {
                    "type": "string",
                    "description": "Short name for sensor [fi]"
                },
                "unit": {
                    "type": "string",
                    "description": "Unit of sensor value"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Sensor id"
                },
                "nameOld": {
                    "type": "string",
                    "description": "Sensor old name. For new sensors will equal name. Will deprecate in future."
                }
            },
            "description": "Road station sensor"
        },
        "RoadStationsSensorsMetadata": {
            "type": "object",
            "required": [
                "dataLastCheckedTime",
                "dataUpdatedTime",
                "roadStationSensors"
            ],
            "properties": {
                "dataLastCheckedTime": {
                    "type": "string",
                    "description": "Data last checked timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "roadStationSensors": {
                    "type": "array",
                    "description": "Available sensors of weather stations",
                    "items": {
                        "$ref": "#/definitions/RoadStationSensor"
                    }
                }
            },
            "description": "Available sensors of weather stations"
        },
        "SensorValue": {
            "type": "object",
            "required": [
                "id",
                "name",
                "sensorUnit",
                "sensorValue",
                "shortName"
            ],
            "properties": {
                "roadStationId": {
                    "type": "integer",
                    "format": "int64"
                },
                "sensorValueDescriptionEn": {
                    "type": "string",
                    "description": "Additional information of sensor value [en]"
                },
                "sensorValueDescriptionFi": {
                    "type": "string",
                    "description": "Additional information of sensor value [fi]"
                },
                "timeWindowEnd": {
                    "type": "string",
                    "description": "Measurement time window end time (only for fixed time window sensors)"
                },
                "timeWindowStart": {
                    "type": "string",
                    "description": "Measurement time window start time (only for fixed time window sensors)"
                },
                "name": {
                    "type": "string",
                    "description": "Sensor name"
                },
                "oldName": {
                    "type": "string",
                    "description": "Sensor old name. For new sensors will equal name. Will deprecate in future version."
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Sensor type id (naturalId)"
                },
                "shortName": {
                    "type": "string",
                    "description": "Sensor short name"
                },
                "sensorValue": {
                    "type": "number",
                    "format": "double",
                    "description": "Measured sensor value"
                },
                "sensorUnit": {
                    "type": "string",
                    "description": "Measured sensor value unit"
                }
            },
            "description": "Sensor value"
        },
        "SensorValueDescription": {
            "type": "object",
            "properties": {
                "descriptionFi": {
                    "type": "string",
                    "description": "Sensor description [fi]"
                },
                "sensorValue": {
                    "type": "number",
                    "format": "double",
                    "description": "Sensor value"
                },
                "descriptionEn": {
                    "type": "string",
                    "description": "Sensor description [en]"
                }
            },
            "description": "Additional information of sensor values"
        },
        "Site": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Site id"
                },
                "latitudeWgs84": {
                    "type": "number",
                    "format": "double",
                    "description": "Site latitude in WGS84"
                },
                "longitudeWgs84": {
                    "type": "number",
                    "format": "double",
                    "description": "Site longitude in WGS84"
                },
                "nameEn": {
                    "type": "string",
                    "description": "Site name in English"
                },
                "nameFi": {
                    "type": "string",
                    "description": "Site name in Finnish"
                },
                "nameSv": {
                    "type": "string",
                    "description": "Site name in Swedish"
                },
                "roadSection": {
                    "$ref": "#/definitions/RoadSection"
                },
                "roadSectionBeginDistance": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Distance in meters from the beginning of the road section"
                },
                "xCoordKkj3": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Site X coordinate in Finnish National Coordinate System (KKJ3)"
                },
                "yCoordKkj3": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Site Y coordinate in Finnish National Coordinate System (KKJ3)"
                }
            }
        },
        "Subscription": {
            "type": "object",
            "properties": {
                "catalogueReference": {
                    "$ref": "#/definitions/CatalogueReference"
                },
                "deleteSubscription": {
                    "type": "boolean"
                },
                "deliveryInterval": {
                    "type": "number",
                    "format": "float"
                },
                "filterReference": {
                    "$ref": "#/definitions/FilterReference"
                },
                "operatingMode": {
                    "type": "string",
                    "enum": [
                        "OPERATING_MODE_0",
                        "OPERATING_MODE_1",
                        "OPERATING_MODE_2",
                        "OPERATING_MODE_3"
                    ]
                },
                "subscriptionExtension": {
                    "$ref": "#/definitions/ExtensionType"
                },
                "subscriptionStartTime": {
                    "$ref": "#/definitions/XMLGregorianCalendar"
                },
                "subscriptionState": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "SUSPENDED"
                    ]
                },
                "subscriptionStopTime": {
                    "$ref": "#/definitions/XMLGregorianCalendar"
                },
                "target": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Target"
                    }
                },
                "updateMethod": {
                    "type": "string",
                    "enum": [
                        "ALL_ELEMENT_UPDATE",
                        "SINGLE_ELEMENT_UPDATE",
                        "SNAPSHOT"
                    ]
                }
            }
        },
        "Target": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                },
                "targetExtension": {
                    "$ref": "#/definitions/ExtensionType"
                }
            }
        },
        "TimestampedTrafficDisorderDatex2": {
            "type": "object",
            "properties": {
                "d2LogicalModel": {
                    "$ref": "#/definitions/D2LogicalModel"
                },
                "published": {
                    "$ref": "#/definitions/ObservationTimeType"
                }
            }
        },
        "TmsData": {
            "type": "object",
            "required": [
                "dataUpdatedTime"
            ],
            "properties": {
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "tmsStations": {
                    "type": "array",
                    "description": "TMS Stations data",
                    "items": {
                        "$ref": "#/definitions/TmsStationData"
                    }
                }
            },
            "description": "Latest measurement data from TMS Stations"
        },
        "TmsFreeFlowSpeedData": {
            "type": "object",
            "required": [
                "freeFlowSpeed1",
                "freeFlowSpeed2",
                "id",
                "tmsNumber"
            ],
            "properties": {
                "freeFlowSpeed1": {
                    "type": "number",
                    "format": "double",
                    "description": "Free flow speed to direction 1 [km/h]"
                },
                "freeFlowSpeed2": {
                    "type": "number",
                    "format": "double",
                    "description": "Free flow speed to direction 2 [km/h]"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "TMS station identifier (naturalId)"
                },
                "tmsNumber": {
                    "type": "integer",
                    "format": "int64",
                    "description": "TMS station number"
                }
            }
        },
        "TmsStationData": {
            "type": "object",
            "required": [
                "id",
                "sensorValues",
                "tmsNumber"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Road station id"
                },
                "measuredTime": {
                    "type": "string",
                    "description": "Values measured timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "sensorValues": {
                    "type": "array",
                    "description": "Measured sensor values of the Weather Station",
                    "items": {
                        "$ref": "#/definitions/SensorValue"
                    }
                },
                "tmsNumber": {
                    "type": "integer",
                    "format": "int64",
                    "description": "TMS station number"
                }
            },
            "description": "TMS station with sensor values"
        },
        "TmsStationFeature": {
            "type": "object",
            "required": [
                "geometry",
                "id",
                "properties",
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string",
                    "description": "\"Feature\": GeoJSON Feature Object"
                },
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Same as TmsStationProperties.roadStationId"
                },
                "geometry": {
                    "description": "GeoJSON Point Geometry Object. Point where station is located",
                    "$ref": "#/definitions/Geometry"
                },
                "properties": {
                    "description": "TMS station properties",
                    "$ref": "#/definitions/TmsStationProperties"
                }
            },
            "description": "GeoJSON Feature Object"
        },
        "TmsStationFeatureCollection": {
            "type": "object",
            "required": [
                "dataLastCheckedTime",
                "dataUpdatedTime",
                "features",
                "type"
            ],
            "properties": {
                "dataLastCheckedTime": {
                    "type": "string",
                    "description": "Data last checked timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "type": {
                    "type": "string",
                    "description": "\"FeatureCollection\": GeoJSON FeatureCollection Object"
                },
                "features": {
                    "type": "array",
                    "description": "Features",
                    "items": {
                        "$ref": "#/definitions/TmsStationFeature"
                    }
                }
            },
            "description": "GeoJSON Feature Collection of TMS stations"
        },
        "TmsStationProperties": {
            "type": "object",
            "required": [
                "coordinatesETRS89",
                "direction1Municipality",
                "direction2Municipality",
                "roadStationId",
                "tmsNumber"
            ],
            "properties": {
                "annualMaintenanceTime": {
                    "type": "string",
                    "description": "Annual maintenance timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "calculatorDeviceType": {
                    "type": "string",
                    "description": "Type of calculation device",
                    "enum": [
                        "DSL_3",
                        "DSL_4_L",
                        "DSL_4_G",
                        "DSL_5",
                        "OTHER"
                    ]
                },
                "collectionInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Data collection interval [s]"
                },
                "collectionStatus": {
                    "type": "string",
                    "description": "Data collection status",
                    "enum": [
                        "GATHERING",
                        "REMOVED_TEMPORARILY",
                        "REMOVED_PERMANENTLY"
                    ]
                },
                "coordinatesETRS89": {
                    "type": "array",
                    "description": "Road station coordinates (LONGITUDE, LATITUDE, ALTITUDE. Coordinates are in ETRS89 / ETRS-TM35FIN format. Altitude is optional and measured in metres.)Point's coordinates  (Coordinates in WGS84. Altitude is optional [m])",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "country": {
                    "type": "string",
                    "description": "Country where station is located"
                },
                "direction1MunicipalityCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Direction 1 municipality code"
                },
                "direction2MunicipalityCode": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Direction 2 municipality code"
                },
                "liviId": {
                    "type": "string",
                    "description": "Id in road registry"
                },
                "municipality": {
                    "type": "string",
                    "description": "Municipality"
                },
                "municipalityCode": {
                    "type": "string",
                    "description": "Municipality code"
                },
                "name": {
                    "type": "string",
                    "description": "Common name of road station"
                },
                "names": {
                    "type": "object",
                    "description": "Map of namess [fi, sv, en]",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "province": {
                    "type": "string",
                    "description": "Province"
                },
                "provinceCode": {
                    "type": "string",
                    "description": "Province code"
                },
                "repairMaintenanceTime": {
                    "type": "string",
                    "description": "Repair maintenance timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "roadAddress": {
                    "$ref": "#/definitions/RoadAddress"
                },
                "roadStationId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Road station's id (naturalId)"
                },
                "startTime": {
                    "type": "string",
                    "description": "Station established timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "state": {
                    "type": "string",
                    "description": "Road station state",
                    "enum": [
                        "OK",
                        "OK_FAULT_DOUBT_CANCELLED",
                        "FAULT_DOUBT",
                        "FAULT_CONFIRMED",
                        "FAULT_CONFIRMED_NOT_FIXED_IN_NEAR_FUTURE",
                        "REPAIR_REQUEST_POSTED",
                        "REPAIR_MAINTENANCE_DONE",
                        "REPAIR_INTERRUPTED"
                    ]
                },
                "stationSensors": {
                    "type": "array",
                    "description": "Tms Station Sensors ids",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "tmsNumber": {
                    "type": "integer",
                    "format": "int64",
                    "description": "TMS station number (naturalId)"
                },
                "tmsStationType": {
                    "type": "string",
                    "description": "Type of  TMS station",
                    "enum": [
                        "DSL_4",
                        "DSL_6",
                        "E_18",
                        "DSL",
                        "FINAVIA"
                    ]
                },
                "direction1Municipality": {
                    "type": "string",
                    "description": "Direction 1 municipality (1 = According to the road register address increasing direction. I.e. on the road 4 to Lahti, if we are in Korso.)"
                },
                "direction2Municipality": {
                    "type": "string",
                    "description": "Direction 2 municipality (2 = According to the road register address decreasing direction. I.e. on the road 4 to Helsinki, if we are in Korso.)"
                }
            },
            "description": "TMS station properties"
        },
        "TrafficDisordersDatex2Response": {
            "type": "object",
            "properties": {
                "disorder": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TimestampedTrafficDisorderDatex2"
                    }
                }
            }
        },
        "TrafficFluencyData": {
            "type": "object",
            "required": [
                "dataUpdatedTime"
            ],
            "properties": {
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "latestMedians": {
                    "type": "array",
                    "description": "Latest medians",
                    "items": {
                        "$ref": "#/definitions/LatestMedianData"
                    }
                }
            },
            "description": "The latest 5 minute median, corresponding average speed, fluency class, and timestamp of the latest update for each link"
        },
        "Values": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/MultilingualStringValue"
                    }
                }
            }
        },
        "WeatherData": {
            "type": "object",
            "required": [
                "dataUpdatedTime"
            ],
            "properties": {
                "dataUpdatedTime": {
                    "type": "string",
                    "description": "Data last updated timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "weatherStations": {
                    "type": "array",
                    "description": "Weather Stations data",
                    "items": {
                        "$ref": "#/definitions/WeatherStationData"
                    }
                }
            },
            "description": "Latest measurement data from Weather Stations"
        },
        "WeatherStationData": {
            "type": "object",
            "required": [
                "id",
                "sensorValues"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Road station id"
                },
                "measuredTime": {
                    "type": "string",
                    "description": "Values measured timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "sensorValues": {
                    "type": "array",
                    "description": "Measured sensor values of the Weather Station",
                    "items": {
                        "$ref": "#/definitions/SensorValue"
                    }
                }
            },
            "description": "Weather station with sensor values"
        },
        "WeatherStationProperties": {
            "type": "object",
            "required": [
                "coordinatesETRS89",
                "roadStationId"
            ],
            "properties": {
                "annualMaintenanceTime": {
                    "type": "string",
                    "description": "Annual maintenance timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "collectionInterval": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Data collection interval [s]"
                },
                "collectionStatus": {
                    "type": "string",
                    "description": "Data collection status",
                    "enum": [
                        "GATHERING",
                        "REMOVED_TEMPORARILY",
                        "REMOVED_PERMANENTLY"
                    ]
                },
                "coordinatesETRS89": {
                    "type": "array",
                    "description": "Road station coordinates (LONGITUDE, LATITUDE, ALTITUDE. Coordinates are in ETRS89 / ETRS-TM35FIN format. Altitude is optional and measured in metres.)Point's coordinates  (Coordinates in WGS84. Altitude is optional [m])",
                    "items": {
                        "type": "number",
                        "format": "double"
                    }
                },
                "country": {
                    "type": "string",
                    "description": "Country where station is located"
                },
                "liviId": {
                    "type": "string",
                    "description": "Id in road registry"
                },
                "master": {
                    "type": "boolean",
                    "example": false,
                    "description": "Is station master or slave station"
                },
                "municipality": {
                    "type": "string",
                    "description": "Municipality"
                },
                "municipalityCode": {
                    "type": "string",
                    "description": "Municipality code"
                },
                "name": {
                    "type": "string",
                    "description": "Common name of road station"
                },
                "names": {
                    "type": "object",
                    "description": "Map of namess [fi, sv, en]",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "province": {
                    "type": "string",
                    "description": "Province"
                },
                "provinceCode": {
                    "type": "string",
                    "description": "Province code"
                },
                "repairMaintenanceTime": {
                    "type": "string",
                    "description": "Repair maintenance timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "roadAddress": {
                    "$ref": "#/definitions/RoadAddress"
                },
                "roadStationId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Road station's id (naturalId)"
                },
                "startTime": {
                    "type": "string",
                    "description": "Station established timestamp in ISO 8601 format with time offsets from UTC (eg. 2016-04-20T12:38:16.328+03:00)"
                },
                "state": {
                    "type": "string",
                    "description": "Road station state",
                    "enum": [
                        "OK",
                        "OK_FAULT_DOUBT_CANCELLED",
                        "FAULT_DOUBT",
                        "FAULT_CONFIRMED",
                        "FAULT_CONFIRMED_NOT_FIXED_IN_NEAR_FUTURE",
                        "REPAIR_REQUEST_POSTED",
                        "REPAIR_MAINTENANCE_DONE",
                        "REPAIR_INTERRUPTED"
                    ]
                },
                "stationSensors": {
                    "type": "array",
                    "description": "Weather Station Sensors ids",
                    "items": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "weatherStationType": {
                    "type": "string",
                    "description": "Type of Weather Station",
                    "enum": [
                        "ROSA",
                        "E_18",
                        "FINAVIA_V",
                        "FINAVIA_B",
                        "ISGN",
                        "OLD",
                        "FINAVIA"
                    ]
                }
            },
            "description": "Weather Station properties"
        },
        "XMLGregorianCalendar": {
            "type": "object",
            "properties": {
                "day": {
                    "type": "integer",
                    "format": "int32"
                },
                "eon": {
                    "type": "integer"
                },
                "eonAndYear": {
                    "type": "integer"
                },
                "fractionalSecond": {
                    "type": "number"
                },
                "hour": {
                    "type": "integer",
                    "format": "int32"
                },
                "millisecond": {
                    "type": "integer",
                    "format": "int32"
                },
                "minute": {
                    "type": "integer",
                    "format": "int32"
                },
                "month": {
                    "type": "integer",
                    "format": "int32"
                },
                "second": {
                    "type": "integer",
                    "format": "int32"
                },
                "timezone": {
                    "type": "integer",
                    "format": "int32"
                },
                "valid": {
                    "type": "boolean"
                },
                "xmlschemaType": {
                    "$ref": "#/definitions/QName"
                },
                "year": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        }
    }
}